DROP TABLE IF EXISTS user ;
CREATE TABLE user (USER_ID BIGINT AUTO_INCREMENT NOT NULL,
USER_USERNAME CHAR(50),
USER_MAIL CHAR(200),
USER_PASSWORD CHAR(200),
STATUS_ID BIGINT,
profil_profil_id BIGINT,
PRIMARY KEY (USER_ID)) ENGINE=InnoDB;

DROP TABLE IF EXISTS Status ;
CREATE TABLE Status (STATUS_ID BIGINT AUTO_INCREMENT NOT NULL,
STATUS_ROLE CHAR(50),
PRIMARY KEY (STATUS_ID)) ENGINE=InnoDB;

DROP TABLE IF EXISTS profil ;
CREATE TABLE profil (PROFIL_ID BIGINT AUTO_INCREMENT NOT NULL,
PROFIL_LOGO CHAR(200),
PROFIL_HEADER CHAR(200),
PROFIL_ORIGIN_ID CHAR(100),
PROFIL_TWITTER CHAR(200),
PROFIL_YOUTUBE CHAR(200),
PROFIL_TWITCH CHAR(200),
user_user_id BIGINT,
PRIMARY KEY (PROFIL_ID)) ENGINE=InnoDB;

DROP TABLE IF EXISTS proposal ;
CREATE TABLE proposal (PROPOSAL_ID BIGINT AUTO_INCREMENT NOT NULL,
PROPOSAL_TITLE CHAR(200),
PROPOSAL_DESC CHAR,
PROPOSAL_LINK CHAR,
USER_ID BIGINT,
PRIMARY KEY (PROPOSAL_ID)) ENGINE=InnoDB;

DROP TABLE IF EXISTS teams ;
CREATE TABLE teams (TEAMS_ID BIGINT AUTO_INCREMENT NOT NULL,
TEAM_NAME CHAR(50),
TEAM_LOGO CHAR(100),
TEAM_COUNTRY CHAR(50),
USER_ID BIGINT,
PRIMARY KEY (TEAMS_ID)) ENGINE=InnoDB;

DROP TABLE IF EXISTS player ;
CREATE TABLE player (PLAYER_ID BIGINT AUTO_INCREMENT NOT NULL,
PLAYER_NAME CHAR(50),
teams_teams_id BIGINT,
PRIMARY KEY (PLAYER_ID)) ENGINE=InnoDB;

DROP TABLE IF EXISTS tournament ;
CREATE TABLE tournament (TOURNAMENT_ID BIGINT AUTO_INCREMENT NOT NULL,
TOURNAMENT_NAME CHAR(50),
TOURNAMENT_LOGO CHAR(50),
TOURNAMENT_FORMAT CHAR(100),
TOURNAMENT_START DATE,
TOURNAMENT_STATUS CHAR(50),
TOURNAMENT_LINK CHAR(200),
teams_teams_id BIGINT,
USER_ID BIGINT,
PRIMARY KEY (TOURNAMENT_ID)) ENGINE=InnoDB;

DROP TABLE IF EXISTS matches ;
CREATE TABLE matches (MATCHES_ID BIGINT AUTO_INCREMENT NOT NULL,
MATCHES_DATE DATE,
MATCHES_LINK_VOD CHAR(200),
tournament_tournament_id BIGINT,
matches_score_score_id BIGINT,
USER_ID BIGINT,
PRIMARY KEY (MATCHES_ID)) ENGINE=InnoDB;

DROP TABLE IF EXISTS matches_score ;
CREATE TABLE matches_score (SCORE_ID BIGINT AUTO_INCREMENT NOT NULL,
SCORE_TEAM1 CHAR(50),
SCORE_TEAM2 CHAR(50),
matches_matches_id BIGINT,
MAPS_ID BIGINT,
PRIMARY KEY (SCORE_ID)) ENGINE=InnoDB;

DROP TABLE IF EXISTS maps ;
CREATE TABLE maps (MAPS_ID BIGINT AUTO_INCREMENT NOT NULL,
MAPS_NAME CHAR(50),
PRIMARY KEY (MAPS_ID)) ENGINE=InnoDB;

DROP TABLE IF EXISTS article ;
CREATE TABLE article (ARTICLE_ID BIGINT AUTO_INCREMENT NOT NULL,
ARTICLE_TITLE CHAR(100),
ARTICLE_DATE DATE,
ARTICLE_TYPE CHAR(50),
ARTICLE_LINK CHAR(200),
ARTICLE_IMAGE CHAR(200),
ARTICLE_DESC CHAR(200),
ARTICLE_AUTHOR CHAR(100),
USER_ID BIGINT,
PRIMARY KEY (ARTICLE_ID)) ENGINE=InnoDB;

ALTER TABLE `user` ADD CONSTRAINT FK_user_STATUS_ID FOREIGN KEY (STATUS_ID) REFERENCES `Status` (STATUS_ID);

ALTER TABLE user ADD CONSTRAINT FK_user_profil_profil_id FOREIGN KEY (profil_profil_id) REFERENCES profil (PROFIL_ID);
ALTER TABLE profil ADD CONSTRAINT FK_profil_user_user_id FOREIGN KEY (user_user_id) REFERENCES user (USER_ID);
ALTER TABLE proposal ADD CONSTRAINT FK_proposal_USER_ID FOREIGN KEY (USER_ID) REFERENCES user (USER_ID);
ALTER TABLE teams ADD CONSTRAINT FK_teams_USER_ID FOREIGN KEY (USER_ID) REFERENCES user (USER_ID);
ALTER TABLE player ADD CONSTRAINT FK_player_teams_teams_id FOREIGN KEY (teams_teams_id) REFERENCES teams (TEAMS_ID);
ALTER TABLE tournament ADD CONSTRAINT FK_tournament_teams_teams_id FOREIGN KEY (teams_teams_id) REFERENCES teams (TEAMS_ID);
ALTER TABLE tournament ADD CONSTRAINT FK_tournament_USER_ID FOREIGN KEY (USER_ID) REFERENCES user (USER_ID);
ALTER TABLE matches ADD CONSTRAINT FK_matches_tournament_tournament_id FOREIGN KEY (tournament_tournament_id) REFERENCES tournament (TOURNAMENT_ID);
ALTER TABLE matches ADD CONSTRAINT FK_matches_matches_score_score_id FOREIGN KEY (matches_score_score_id) REFERENCES matches_score (SCORE_ID);
ALTER TABLE matches ADD CONSTRAINT FK_matches_USER_ID FOREIGN KEY (USER_ID) REFERENCES user (USER_ID);
ALTER TABLE matches_score ADD CONSTRAINT FK_matches_score_matches_matches_id FOREIGN KEY (matches_matches_id) REFERENCES matches (MATCHES_ID);
ALTER TABLE matches_score ADD CONSTRAINT FK_matches_score_MAPS_ID FOREIGN KEY (MAPS_ID) REFERENCES maps (MAPS_ID);
ALTER TABLE article ADD CONSTRAINT FK_article_USER_ID FOREIGN KEY (USER_ID) REFERENCES user (USER_ID);

